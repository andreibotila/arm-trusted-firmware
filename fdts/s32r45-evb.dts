/*
 * Copyright 2021-2022 NXP
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */
#include <dt-bindings/clock/s32r45-clock.h>
#include <dt-bindings/clock/s32r45-scmi-clock.h>
#include <dt-bindings/ddr-errata/s32-ddr-errata.h>

/dts-v1/;
#include "s32cc.dtsi"

/{
	model = "NXP S32R45";
	compatible = "nxp,s32r45";

	reserved-memory {
		ddr_errata_reserved: ddr@85000000 {
			reg = <0x0 DDR_ERRATA_REGION_BASE
				   0x0 DDR_ERRATA_REGION_SIZE>; /* 4 KB */
			no-map;
		};
	};

	gmac1_ext_rx: gmac1_ext_rx {
		compatible = "fixed-clock";
		clock-frequency = <25000000>;
		#clock-cells = <1>;
	};

	gmac1_ext_tx: gmac1_ext_tx {
		compatible = "fixed-clock";
		clock-frequency = <125000000>;
		#clock-cells = <1>;
	};

	gmac1_ext_ref: gmac1_ext_ref {
		compatible = "fixed-clock";
		clock-frequency = <50000000>;
		#clock-cells = <1>;
	};
};

&plat_clks {
	clocks = <&plat_clks S32GEN1_CLK_PER>,
		<&plat_clks S32GEN1_CLK_FTM0_REF>,
		<&plat_clks S32GEN1_CLK_FTM1_REF>,
		<&plat_clks S32GEN1_CLK_CAN_PE>,
		<&plat_clks S32GEN1_CLK_SPI>,
		<&plat_clks S32GEN1_CLK_QSPI>,
		<&plat_clks S32R45_CLK_ACCEL4>,
		<&plat_clks S32R45_CLK_ACCEL3>;

	assigned-clocks =
			<&plat_clks S32GEN1_CLK_FXOSC>,
			<&plat_clks S32GEN1_CLK_FIRC>,
			<&plat_clks S32GEN1_CLK_SIRC>,
			<&plat_clks S32GEN1_CLK_GMAC0_EXT_RX>,
			<&plat_clks S32R45_CLK_SERDES1_LANE0_TX>,
			<&plat_clks S32R45_CLK_SERDES1_LANE0_CDR>,
			<&plat_clks S32GEN1_CLK_SERDES0_LANE0_TX>,
			<&plat_clks S32GEN1_CLK_SERDES0_LANE0_CDR>,
			<&plat_clks S32GEN1_CLK_SERDES_REF>;
	assigned-clock-parents =
			<&fxosc 0>,
			<&firc 0>,
			<&sirc 0>,
			<&gmac0_ext_rx 0>,
			<&serdes1_lane0_ext_tx 0>,
			<&serdes1_lane0_ext_cdr 0>,
			<&serdes0_lane0_ext_tx 0>,
			<&serdes0_lane0_ext_cdr 0>;
	assigned-clock-rates =
			<0>, <0>, <0>, <0>,
			<0>, <0>, <0>, <0>,
			<100000000>;

	mc_cgm2: mc_cgm2@440c0000 {
		compatible = "nxp,s32cc-mc_cgm2";
		reg = <0x0 0x440c0000 0x0 0x3000>;

		assigned-clocks =
			<&plat_clks S32R45_CLK_MC_CGM2_MUX0>,
			<&plat_clks S32R45_CLK_MC_CGM2_MUX1>,
			<&plat_clks S32R45_CLK_ACCEL3>,
			<&plat_clks S32R45_CLK_ACCEL4>;
		assigned-clock-parents =
			<&plat_clks S32R45_CLK_ACCEL_PLL_PHI0>,
			<&plat_clks S32R45_CLK_ARM_PLL_DFS4_2>;
		assigned-clock-rates =
			<0>,
			<0>,
			<600000000>,
			<400000000>;
	};
};

&accelpll {
	assigned-clocks =
		<&plat_clks S32GEN1_CLK_ACCEL_PLL_MUX>,
		<&plat_clks S32GEN1_CLK_ACCEL_PLL_VCO>,
		<&plat_clks S32R45_CLK_ACCEL_PLL_PHI0>,
		<&plat_clks S32GEN1_CLK_ARM_PLL_DFS4>;
	assigned-clock-parents =
		<&plat_clks S32GEN1_CLK_FXOSC>;
	assigned-clock-rates =
		<0>,
		<1800000000>,
		<600000000>,
		<400000000>;
};


&mc_cgm0 {
	clocks = <&plat_clks S32GEN1_CLK_SERDES_REF>,
		<&plat_clks S32GEN1_CLK_PER>,
		<&plat_clks S32GEN1_CLK_FTM0_REF>,
		<&plat_clks S32GEN1_CLK_FTM1_REF>,
		<&plat_clks S32GEN1_CLK_CAN_PE>,
		<&plat_clks S32GEN1_CLK_LIN_BAUD>,
		<&plat_clks S32GEN1_CLK_SPI>,
		<&plat_clks S32GEN1_CLK_QSPI>;
};

&mc_cgm2 {
	clocks = <&plat_clks S32R45_CLK_ACCEL4>,
		<&plat_clks S32R45_CLK_ACCEL3>;
};

&ddr_errata {
	memory-region = <&ddr_errata_reserved>;
	status = "okay";
};
